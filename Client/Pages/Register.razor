@page "/register"
@inject IAccountRegisterDTO Model
@inject ILazor Lazor
@inject HttpClient Http

<div class="card">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <EditForm Model="@Model" OnSubmit="async ()=> await HandleRegister()">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="Model.Email" class="form-control" />
                <ValidationMessage For="@(() => Model.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="Model.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => Model.Password)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="Model.ConfirmPassword" type="password" class="form-control" />
                <ValidationMessage For="@(() => Model.ConfirmPassword)" />
            </div>
                
                <LoadingButton Loading="@Lazor.Loading">Register</LoadingButton>
                <span class="small form-text text-danger">@Lazor.ErrorMessage</span>
           
            <NavLink href="login" class="btn btn-link">Login</NavLink>
        </EditForm>
    </div>
</div>


@code {
 public async Task HandleRegister()
    {
        Lazor.SetLoadingStatus(true);
        try
        {
            if (Lazor.IsObjectValid(Model))
            {
                var response = await Http.PostAsJsonAsync("/api/Account/Register", Model);
                bool isRegistered = response.IsSuccessStatusCode;

                if(!isRegistered)
                {
                    Lazor.SetErrorMessage("Registration failed. Try again.");
                }
            }
            else
            {
                Lazor.SetErrorMessage("Check you username and password for errors.");
            }
        
        }
        catch
        {
            Lazor.SetErrorMessage("An error occurred. Try again.");
        }
        Lazor.SetLoadingStatus(false);
        StateHasChanged();
        return;
    }

}