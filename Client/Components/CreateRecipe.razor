@inject HttpClient Http
@inject ILazor e
@inject IRecipeUrlDTO model


<div class="card">
    <h4 class="card-header">Add a Recipe</h4>
    <div class="card-body">
        <EditForm Model="@model" OnSubmit="HandleSubmit">
            <DataAnnotationsValidator />

            <InputText @bind-Value="model.URL" class="form-control" DisplayName="Recipe URL" />

            <span class="small form-text text-danger">@e.ErrorMessage</span>

            <CascadingValue Name="Loading" Value="@e.Loading">
                <LoadingButton>Add</LoadingButton>
            </CascadingValue>

        </EditForm>
    </div>

    <CascadingValue Name="LazorObject" Value="@e">
        <AddRecipeModal />
    </CascadingValue>
</div>
@code {

    public void HandleSubmit()
    {
        e.Loading = true;
        try
        {
            if (model.URL.StartsWith("https://www.allrecipes.com/recipe/"))
            {
                try
                {
                    var response = PostUrl();
                    e.ErrorMessage = "";
                    e.Toggle();
                }
                catch (Exception)
                {
                    e.ErrorMessage = "Bad response from server.";
                }
            }
            else
            {
                e.ErrorMessage = "Bad URL. Try again.";
            }
        }
        catch (NullReferenceException)
        {
            e.ErrorMessage = "Please add a recipe URL.";
        }
        e.Loading = false;
    }

    public async Task PostUrl()
    {
        var response = await Http.PostAsJsonAsync<IRecipeUrlDTO>("/api/Recipe/RecipeURL", model);
    }
}
