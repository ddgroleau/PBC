@inject IListGeneratorEvent Event

<div class="card">
    <h4 class="card-header">
        Generate List
        <br />
        <label>Days:</label>
        <CascadingValue Name="loading" Value="@Event.Lazor.Loading">
            <LoadingButton HandleClick="() => HandleAdd()">(+)</LoadingButton>
            <LoadingButton HandleClick="() => Event.RemoveDay()">(-)</LoadingButton>
        </CascadingValue>
        <EditForm Model="Event.ListGeneratorDTO">
            <DataAnnotationsValidator />
            <InputNumber @bind-Value=@Event.ListGeneratorDTO.Days />
        </EditForm>
        <span class="small form-text text-danger">@Event.Lazor.ErrorMessage</span>
    </h4>
    <div class="card-body">
        <div class="row">
            @{
                for (int day = 0; day <= Event.ListGeneratorDTO.Days; day++)
                {
                    if (day > 0 && Event.ListGeneratorDTO.Days > 0)
                    {
                        <CascadingValue Name="GeneratedDay" Value="Event.ListGeneratorDTO.GeneratedDays[Event.ListGeneratorDTO.Days]">
                            <ListGenCard />
                        </CascadingValue>
                    }
                }
            }
        </div>
        <CascadingValue Name="loading" Value="@Event.Lazor.Loading">
            <LoadingButton>Submit</LoadingButton>
        </CascadingValue>
    </div>
</div>

@code {
    // This was added because the UI was -1 behind the current days count. This call will re-render the component to display the current value of days.
    public async Task HandleAdd()
    {
        await Event.AddDay();
        StateHasChanged();
    }
}


