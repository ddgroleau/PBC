@inject IListGeneratorEvent Event

<div class="card">
    <h4 class="card-header">
        Generate List
        <br />
        <label>Days:</label>
        <CascadingValue Name="Loading" Value="@Event.Lazor.Loading">
            <LoadingButton HandleClick="async () => await HandleAdd()">(+)</LoadingButton>
            <LoadingButton HandleClick="() => Event.RemoveDay()">(-)</LoadingButton>
        </CascadingValue>
        <EditForm Model="Event.ListGeneratorDTO">
            <DataAnnotationsValidator />
            <InputNumber @bind-Value=@Event.ListGeneratorDTO.Days />
        </EditForm>
        <span class="small form-text text-danger">@Event.Lazor.ErrorMessage</span>
    </h4>
    <div class="card-body">
        <div class="row">

            @{
                if (Event.Lazor.IsSuccess)
                {
                    <h4 class="text-center text-success">Success!</h4>
                    <button type="button" @onclick="()=>Event.Lazor.SetSuccessStatus(false)" class="btn btn-danger float-right">&times;</button>
                }
                else
                {

                    foreach (var day in Event.ListGeneratorDTO.GeneratedDays)
                    {
                        <CascadingValue Name="GeneratedDay" Value="day">
                            <GeneratedDay />
                        </CascadingValue>
                    }
                }
            }

        </div>
            <LoadingButton Loading=@Event.Lazor.Loading HandleClick="async()=> await HandleClick()">Submit List</LoadingButton>
    </div>
</div>

@code {
    // This was added because the UI was -1 behind the current days count. This call will re-render the component to display the current value of days.
    public async Task HandleAdd()
    {
        await Event.AddDay();
        StateHasChanged();
    }
    // The component needed to be re-rendered or the Loading button would not change state on the UI.
    public async Task HandleClick()
    {
        await Event.SubmitList();
        StateHasChanged();
    }
}


