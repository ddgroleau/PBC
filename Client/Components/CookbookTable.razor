@inject ICookBookTableEvent Event

<div class="col-12">
    <h5>Table</h5>
</div>

<div class="col-12">
    <table>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Tools</th>

        </tr>
        @{
            foreach (var recipe in Event.RetrievedRecipes)
            {
                var retrievedRecipe = recipe;

                <tr>
                    <td>@recipe.Title</td>
                    <td>@recipe.Description</td>
                    <td>
                        <button @onclick="(()=> {
                                                  Event.RecipeDTO = recipe;
                                                  Event.HandleDetails();
                                                 }
                                          )">
                            DetailsButton
                        </button>
                        <button @onclick="(()=> {
                                                  Event.RecipeDTO = recipe;
                                                  Event.HandleClick();
                                                 }
                                          )">
                            UpdateButton
                        </button>
                        <button @onclick="(()=> {
                                                  Event.RecipeDTO = recipe;
                                                  Event.HandleDelete();
                                                 }
                                          )">
                            DeleteButton
                        </button>
                    </td>
                </tr>
            }
                    <CascadingValue Name="LazorObject" Value="Event.Lazor">
                        <CascadingValue Name="RecipeDTO" Value="@Event.RecipeDTO">
                            <MessageModal IsDeleteAction="Event.IsDeleteAction">@Event.Message</MessageModal>
                            <EditRecipeModal HandleClick="Event.Lazor.Toggle" />
                        </CascadingValue>
                    </CascadingValue>
        }
    </table>

</div>

@code {
    [Parameter]
    public bool IsUserCookBook { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        Event.RetrievedRecipes = await Event.GetRecipesAsync(IsUserCookBook, "TestUser");
        StateHasChanged();
    }

}
